###################################################################################
#
# Default compose file, assumes development environment.
# > docker compose -f compose.yaml up -d
# > docker compose -f compose.yaml up -d --build frontend ontopic
# > docker compose -f compose.yaml --profile stats up -d
#
###################################################################################

services:
  mongo:
    image: docker.io/mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME_FILE: "/run/secrets/mongo_user"
      MONGO_INITDB_ROOT_PASSWORD_FILE: "/run/secrets/mongo_pass"
    secrets:
      - mongo_user
      - mongo_pass
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    profiles:
      - dev
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME_FILE: "/run/secrets/mongo_user"
      ME_CONFIG_MONGODB_ADMINPASSWORD_FILE: "/run/secrets/mongo_pass"
    secrets:
      - mongo_user
      - mongo_pass

  ontopic:
    image: ghcr.io/cmueberlycenter/eberly-docuscope-wa/ontopic:latest
    build:
      context: ./ontopic
      dockerfile: ./Dockerfile
    restart: always
    ports:
     - 5000:5000

  frontend:
    image: ghcr.io/cmueberlycenter/eberly-docuscope-wa/myprose:latest
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    ports:
     - 8888:8888
    secrets:
      - anthropic_api_key
      - mongo_user
      - mongo_pass
      - token
    environment:
      ANTHROPIC_API_KEY_FILE: /run/secrets/anthropic_api_key
      ANTHROPIC_MAX_TOKENS: 2048
      EXPIRE_REVIEW_SECONDS: 86400
      GOOGLE_ANALYTICS: G-88EPY3554N
      GOOGLE_CLIENT_ID: 1234 # Replace with your actual Google Client ID
      LTI_HOSTNAME: https://docuscope-sc-test.eberly.cmu.edu/
      LTI_KEY_FILE: /run/secrets/token
      MONGO_DB: myprose
      MONGO_HOST: mongo:27017
      MONGO_PASSWORD_FILE: /run/secrets/mongo_pass
      MONGO_USER_FILE: /run/secrets/mongo_user
      NODE_ENV: production
      ONTOPIC_SERVER: http://ontopic:5000/
      PORT: 8888
      PROMPT_TEMPLATES: /app/resources/prompts
      TOKEN_SECRET_FILE: /run/secrets/token
      TOOL_SETTINGS: /app/build/app/settings/settings.json
      WRITING_TASKS: /app/resources/wtd_lib
    restart: always
    depends_on:
      - "mongo"
    volumes:
      - "./settings:/app/build/app/settings:ro"
      - "./private:/app/private:ro"
      - "../myprose-resources:/app/resources:ro"
  grafana:
    image: docker.io/grafana/grafana-enterprise:latest
    container_name: grafana
    ports:
      - 3000:3000
    profiles:
      - stats
    restart: unless-stopped
    secrets:
      - grafana_admin_pass
    environment:
      GF_SECURITY_ADMIN_PASSWORD__FILE: "/run/secrets/grafana_admin_pass"
    volumes:
      - 'grafana_storage:/var/lib/grafana'
  prometheus:
    image: docker.io/prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    profiles:
      - stats
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: unless-stopped

secrets:
  anthropic_api_key:
    file: secrets/anthropic_api_key
  grafana_admin_pass:
    file: secrets/grafana_admin_pass
  mongo_user:
    file: secrets/mongo_user
  mongo_pass:
    file: secrets/mongo_pass
  token:
    file: secrets/token

volumes:
  grafana_storage: {}